@model IEnumerable<AppFotos.Models.Fotografias>

@{
   ViewData["Title"]="Index";
   int idUtilizador = (int)ViewBag.idUtilizador;
   string imagem = "";
}

<h1>Index</h1>

<p>
   <a asp-action="Create">Create New</a>
</p>
<table class="table">
   <thead>
      <tr>
         <th>
            Gostos
         </th>
         <th>
            @Html.DisplayNameFor(model => model.Titulo)
         </th>
         <th>
            @Html.DisplayNameFor(model => model.Ficheiro)
         </th>
         <th>
            @Html.DisplayNameFor(model => model.Data)
         </th>
         <th>
            @Html.DisplayNameFor(model => model.Preco)
         </th>
         <th>
            @Html.DisplayNameFor(model => model.Categoria)
         </th>
         <th>
            Fotógrafo(a)
         </th>
         <th></th>
      </tr>
   </thead>
   <tbody>
      @foreach (var fotografia in Model) {
         <tr>
            <td>
               @* processar os Gostos da Fotografia*@
               @if (User.Identity.IsAuthenticated) {
                  <button class="form-control" onclick="UpdateLike(@fotografia.Id)">
                     @if (fotografia.ListaGostos.Any(g => g.UtilizadorFK==idUtilizador)) { imagem="gostei.png"; }
                     else { imagem="gostar.png"; }
                     <img id=@("img"+fotografia.Id)
                          src="~/imagensBase/@imagem" 
                          alt="ícone do gostar/não gostar" 
                          height="30px" />

                  </button>
               }
               <img src="~/imagensBase/gostos.png"
                    alt="ícone de nº de gostos na Fotografia"
                    height="30px" />
               <span id=@("foto"+fotografia.Id)>@fotografia.ListaGostos.Count()</span>


            </td>
            <td>
               @Html.DisplayFor(modelItem => fotografia.Titulo)
            </td>
            <td>
               @*         @Html.DisplayFor(modelItem => fotografia.Ficheiro)   *@
               <img src="~/imagens/@fotografia.Ficheiro"
                    alt="imagem da fotografia com o título '@fotografia.Titulo', fotografada por @fotografia.Dono.Nome."
                    title="@fotografia.Titulo"
                    height="100px" />
            </td>
            <td>
               @Html.DisplayFor(modelItem => fotografia.Data)
            </td>
            <td>
               @Html.DisplayFor(modelItem => fotografia.Preco)
            </td>
            <td>
               @Html.DisplayFor(modelItem => fotografia.Categoria.Categoria)
            </td>
            <td>
               @Html.DisplayFor(modelItem => fotografia.Dono.Nome)
            </td>
            <td>
               @if (User.Identity.IsAuthenticated&&
              fotografia.Dono.UserName==User.Identity.Name) {
                  <text>
                     <a asp-action="Edit" asp-route-id="@fotografia.Id">Edit</a> |
                     <a asp-action="Details" asp-route-id="@fotografia.Id">Details</a> |
                     <a asp-action="Delete" asp-route-id="@fotografia.Id">Delete</a>
                  </text>
               }
            </td>
         </tr>
      }
   </tbody>
</table>



<!-- Código adaptado de
https://learn.microsoft.com/en-us/aspnet/core/signalr/javascript-client?view=aspnetcore-9.0&tabs=visual-studio
-->
<!-- Adicionado script com cliente JS do signalR -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js"
        integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>




<!-- processamento das ações de 'gostar'/'não gostar' -->
<script>
   // constrói o objeto JS que vai interagir com o HUB
   // NOTA: o fluxo todo de dados pode ser visualizado através do separador 'REDE'
   const connection = new signalR.HubConnectionBuilder()
      .withUrl("/gostoshub")
      .configureLogging(signalR.LogLevel.Information)
      .build();

   // função que inicializa a conexão com o HUB
   async function start() {
      try {
         await connection.start();
         console.log("SignalR Connected.");

         // ao recebermos uma resposta onde nome do método é 'UpdateLike' fazemos o update
         connection.on("UpdateLike", (idFoto, numGostos, gostei) => {
            document.getElementById("foto" + idFoto).innerText = numGostos;
            if (gostei) { document.getElementById("img" + idFoto).src = "/imagensBase/gostei.png"; }
            else { document.getElementById("img" + idFoto).src = "/imagensBase/gostar.png"; }
         });

      } catch (err) {
         console.log(err);
      }
   };

   connection.onclose(async () => {
      // do something
   });

   function UpdateLike(idFoto) {
      // linha abaixo é necessária porque o método que chamamos está à espera de uma string,
      //      se lhe passarmos outro tipo de dados dá erro!
      idFoto += '';

      connection.invoke("UpdateLike", idFoto);
   }

   // Start the connection.
   start();

</script>
